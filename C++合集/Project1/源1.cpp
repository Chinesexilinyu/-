#include<iostream>
using namespace std;
int PC1[56] = { //PC1换位表（64―>56）
		57, 49, 41, 33, 25, 17, 9,
		1, 58, 50, 42, 34, 26, 18,
		10, 2, 59, 51, 43, 35, 27,
		19, 11, 3, 60, 52, 44, 36,
		63, 55, 47, 39, 31, 23, 15,
		7, 62, 54, 46, 38, 30, 22,
		14, 6, 61, 53, 45, 37, 29,
		21, 13, 5, 28, 20, 12, 4 };
int PC2[48] = { //PC2换位表（56―>48）
	14, 17, 11, 24, 1, 5,
	3, 28, 15, 6, 21, 10,
	23, 19, 12, 4, 26, 8,
	16, 7, 27, 20, 13, 2,
	41, 52, 31, 37, 47, 55,
	30, 40, 51, 45, 33, 48,
	44, 49, 39, 56, 34, 53,
	46, 42, 50, 36, 29, 32 };
void movement(int c[], int d[], int i, int a[])
{
	int j, m, n, p, q;
	if (a[i] == 1)
	{
		n = c[0];
		m = d[0];
		for (j = 0; j < 27; j++)
		{
			c[j] = c[j + 1];
			d[j] = d[j + 1];
		}
		c[27] = n;
		d[27] = m;
	}
	else
	{
		m = c[0];
		n = c[1];
		p = d[0];
		q = d[1];
		for (j = 0; j < 26; j++)
		{
			c[j] = c[j + 2];
			d[j] = d[j + 2];
		}
		c[26] = m;
		d[26] = p;
		c[27] = n;
		d[27] = q;
	}
}
int main()
{
	int* a;
	a = new int[64];
	int b[64], t[56], c[28], d[28], l[32], r[32], L[32], R[32], e[48];
	int k[16][48];
	int move[16] = { 1,1,2,2,2,2,2,2,1,2,2,2,2,2,2,1 };
	int IP[64] = { 58, 50, 42, 34, 26, 18, 10, 2,
		60, 52, 44, 36, 28, 20, 12, 4,
		62, 54, 46, 38, 30, 22, 14, 6,
		64, 56, 48, 40, 32, 24, 16, 8,
		57, 49, 41, 33, 25, 17, 9, 1,
		59, 51, 43, 35, 27, 19, 11, 3,
		61, 53, 45, 37, 29, 21, 13, 5,
		63, 55, 47, 39, 31, 23, 15, 7 };
	int _IP[64] = { 40,8,48,16,56,24,64,32,
		39,7,47,15,55,23,63,31,
		38,6,46,14,54,22,62,30,
		37,5,45,13,53,21,61,29,
		36,4,44,12,52,20,60,28,
		35,3,43,11,51,19,59,27,
		34,2,42,10,50,18,58,26,
		33,1,41,9,49,17,57,25
	};
	int E[48] = {
		32, 1, 2, 3, 4, 5,
		4, 5, 6, 7, 8, 9,
		8, 9, 10, 11, 12, 13,
		12, 13, 14, 15, 16, 17,
		16, 17, 18, 19, 20, 21,
		20, 21, 22, 23, 24, 25,
		24, 25, 26, 27, 28, 29,
		28, 29, 30, 31, 32, 1 };
	int S1[4][16] = {
		14, 4, 13, 1, 2, 15, 11, 8, 3, 10, 6, 12, 5, 9, 0, 7,
		0, 15, 7, 4, 14, 2, 13, 1, 10, 6, 12, 11, 9, 5, 3, 8,
		4, 1, 14, 8, 13, 6, 2, 11, 15, 12, 9, 7, 3, 10, 5, 0,
		15, 12, 8, 2, 4, 9, 1, 7, 5, 11, 3, 14, 10, 0, 6, 13
	};
	int S2[4][16] = {
		15, 1, 8, 14, 6, 11, 3, 4, 9, 7, 2, 13, 12, 0, 5, 10,
		3, 13, 4, 7, 15, 2, 8, 14, 12, 0, 1, 10, 6, 9, 11, 5,
		0, 14, 7, 11, 10, 4, 13, 1, 5, 8, 12, 6, 9, 3, 2, 15,
		13, 8, 10, 1, 3, 15, 4, 2, 11, 6, 7, 12, 0, 5, 14, 9
	};
	int S3[4][16] = {
		10, 0, 9, 14, 6, 3, 15, 5, 1, 13, 12, 7, 11, 4, 2, 8,
		13, 7, 0, 9, 3, 4, 6, 10, 2, 8, 5, 14, 12, 11, 15, 1,
		13, 6, 4, 9, 8, 15, 3, 0, 11, 1, 2, 12, 5, 10, 14, 7,
		1, 10, 13, 0, 6, 9, 8, 7, 4, 15, 14, 3, 11, 5, 2, 12
	};
	int S4[4][16] = {
		7, 13, 14, 3, 0, 6, 9, 10, 1, 2, 8, 5, 11, 12, 4, 15,
		13, 8, 11, 5, 6, 15, 0, 3, 4, 7, 2, 12, 1, 10, 14, 9,
		10, 6, 9, 0, 12, 11, 7, 13, 15, 1, 3, 14, 5, 2, 8, 4,
		3, 15, 0, 6, 10, 1, 13, 8, 9, 4, 5, 11, 12, 7, 2, 14
	};
	int S5[4][16] = {
		2, 12, 4, 1, 7, 10, 11, 6, 8, 5, 3, 15, 13, 0, 14, 9,
		14, 11, 2, 12, 4, 7, 13, 1, 5, 0, 15, 10, 3, 9, 8, 6,
		4, 2, 1, 11, 10, 13, 7, 8, 15, 9, 12, 5, 6, 3, 0, 14,
		11, 8, 12, 7, 1, 14, 2, 13, 6, 15, 0, 9, 10, 4, 5, 3
	};
	int S6[4][16] = {
		12, 1, 10, 15, 9, 2, 6, 8, 0, 13, 3, 4, 14, 7, 5, 11,
		10, 15, 4, 2, 7, 12, 9, 5, 6, 1, 13, 14, 0, 11, 3, 8,
		9, 14, 15, 5, 2, 8, 12, 3, 7, 0, 4, 10, 1, 13, 11, 6,
		4, 3, 2, 12, 9, 5, 15, 10, 11, 14, 1, 7, 6, 0, 8, 13
	};
	int S7[4][16] = {
		4, 11, 2, 14, 15, 0, 8, 13, 3, 12, 9, 7, 5, 10, 6, 1,
		13, 0, 11, 7, 4, 9, 1, 10, 14, 3, 5, 12, 2, 15, 8, 6,
		1, 4, 11, 13, 12, 3, 7, 14, 10, 15, 6, 8, 0, 5, 9, 2,
		6, 11, 13, 8, 1, 4, 10, 7, 9, 5, 0, 15, 14, 2, 3, 12
	};
	int S8[4][16] = {
		13, 2, 8, 4, 6, 15, 11, 1, 10, 9, 3, 14, 5, 0, 12, 7,
		1, 15, 13, 8, 10, 3, 7, 4, 12, 5, 6, 11, 0, 14, 9, 2,
		7, 11, 4, 1, 9, 12, 14, 2, 0, 6, 10, 13, 15, 3, 5, 8,
		2, 1, 14, 7, 4, 10, 8, 13, 15, 12, 9, 0, 3, 5, 6, 11
	};
	int P[32] = { 16,7,20,21,29,12,28,17,1,15,23,26,5,18,31,10,2,8,24,14,32,27,3,9,19,13,30,6,22,11,4,25 };
	int i, j, h, m, s, u;
	char now;
	do {
		cout << "欢迎来到DES加解密的世界，在这里，您可以加解密任意长度的明文与密文！";
		cout << "请您选择是要加密还是解密：(A代表加密，B代表解密）" << endl;
		cin >> now;
		while (now != 'A' && now != 'B')
		{
			cout << "您的输入失败，请重新输入A或者B" << endl;
			cin >> now;

		}
		if (now == 'A')
		{
			cout << "请输入64位密钥：";
			for (i = 0; i < 64; i++)
				cin >> b[i];
			for (i = 0; i < 56; i++)
				t[i] = b[PC1[i] - 1];
			for (i = 0; i < 28; i++)
			{
				c[i] = t[i];
				d[i] = t[i + 28];
			}
			cout << "请输入64位明文：" << endl;
			for (i = 0; i < 64; i++)
			{
				cin >> a[i];
			}
			cout << "输入完毕！" << endl;
			for (i = 0; i < 64; i++)
			{
				b[i] = a[IP[i] - 1];
			}
			for (i = 0; i < 64; i++)
				a[i] = b[i];
			for (i = 0; i < 32; i++)
			{
				l[i] = a[i];
				r[i] = a[i + 32];
			}
			for (i = 0; i < 16; i++)
			{
				movement(c, d, i, move);
				for (j = 0; j < 28; j++)
				{
					t[j] = c[j];
					t[j + 28] = d[j];
				}
				for (j = 0; j < 48; j++)
					k[i][j] = t[PC2[j] - 1];
			}
			for (i = 0; i < 16; i++)
			{
				for (j = 0; j < 32; j++)
					L[j] = r[j];
				for (j = 0; j < 48; j++)
					e[j] = r[E[j] - 1];
				for (j = 0; j < 48; j++)
				{
					b[j] = e[j] ^ k[i][j];
				}
				for (j = 0, h = 0; j < 8; j++)
				{
					u = b[j * 6] * 2 + b[6 * j + 5];
					m = b[6 * j + 1] * 8 + b[6 * j + 2] * 4 + b[6 * j + 3] * 2 + b[6 * j + 4];
					switch (h)
					{
					case 0:s = S1[u][m]; break;
					case 4:s = S2[u][m]; break;
					case 8:s = S3[u][m]; break;
					case 12:s = S4[u][m]; break;
					case 16:s = S5[u][m]; break;
					case 20:s = S6[u][m]; break;
					case 24:s = S7[u][m]; break;
					case 28:s = S8[u][m]; break;
					}
					r[h] = s / 8;
					s = s % 8;
					r[h + 1] = s / 4;
					s = s % 4;
					r[h + 2] = s / 2;
					s = s % 2;
					r[h + 3] = s;
					h = h + 4;
				}
				for (j = 0; j < 32; j++)
					R[j] = r[P[j] - 1];
				for (j = 0; j < 32; j++)
				{
					if (l[j] + R[j] == 1)
						r[j] = 1;
					else
						r[j] = 0;
				}
				for (j = 0; j < 32; j++)
					l[j] = L[j];
			}
			for (i = 0; i < 32; i++)
				b[i] = r[i];
			for (j = 0; j < 32; j++, i++)
				b[i] = l[j];
			for (i = 0; i < 64; i++)
			{
				a[i] = b[_IP[i] - 1];
			}
			cout << "密文是：" << endl;
			for (i = 0; i < 64; i++)
			{
				cout << a[i];
				if (i % 8 == 7) cout << '\n';
			}
		}
		else
		{
			cout << "请输入64位密钥：";
			for (i = 0; i < 64; i++)
				cin >> b[i];
			for (i = 0; i < 56; i++)
				t[i] = b[PC1[i] - 1];
			for (i = 0; i < 28; i++)
			{
				c[i] = t[i];
				d[i] = t[i + 28];
			}
			cout << "请输入64位密文：" << endl;

			for (i = 0; i < 16; i++)
			{
				movement(c, d, i, move);
				for (j = 0; j < 28; j++)
				{
					t[j] = c[j];
					t[j + 28] = d[j];
				}
				for (j = 0; j < 48; j++)
					k[i][j] = t[PC2[j] - 1];
			}
			for (i = 0; i < 64; i++)
			{
				cin >> a[i];
			}
			cout << "输入完毕！" << endl;
			for (i = 0; i < 64; i++)
			{
				b[i] = a[IP[i] - 1];
			}
			for (i = 0; i < 64; i++)
				a[i] = b[i];
			for (i = 0; i < 32; i++)
			{
				l[i] = a[i];
				r[i] = a[i + 32];
			}
			for (i = 15; i >= 0; i--)
			{
				for (j = 0; j < 32; j++)
					L[j] = r[j];
				for (j = 0; j < 48; j++)
					e[j] = r[E[j] - 1];
				for (j = 0; j < 48; j++)
				{
					b[j] = e[j] ^ k[i][j];
				}
				for (j = 0, h = 0; h < 32;)
				{
					u = b[j] * 2 + b[j + 5];
					m = b[j + 1] * 8 + b[j + 2] * 4 + b[j + 3] * 2 + b[j + 4];
					switch (h)
					{
					case 0:s = S1[u][m]; break;
					case 4:s = S2[u][m]; break;
					case 8:s = S3[u][m]; break;
					case 12:s = S4[u][m]; break;
					case 16:s = S5[u][m]; break;
					case 20:s = S6[u][m]; break;
					case 24:s = S7[u][m]; break;
					case 28:s = S8[u][m]; break;
					}
					r[h] = s / 8;
					s = s % 8;
					r[h + 1] = s / 4;
					s = s % 4;
					r[h + 2] = s / 2;
					s = s % 2;
					r[h + 3] = s;
					h = h + 4;
					j = j + 6;
				}
				for (j = 0; j < 32; j++)
					R[j] = r[P[j] - 1];
				for (j = 0; j < 32; j++)
				{
					if (l[j] + R[j] == 1)
						r[j] = 1;
					else
						r[j] = 0;
				}
				for (j = 0; j < 32; j++)
					l[j] = L[j];
			}
			for (i = 0; i < 32; i++)
				b[i] = r[i];
			for (j = 0; j < 32; j++)
			{
				b[i] = l[j];
				i++;
			}
			for (i = 0; i < 64; i++)
			{
				a[i] = b[_IP[i] - 1];
			}
			cout << "明文是：" << endl;
			for (i = 0; i < 64; i++)
			{
				cout << a[i];
				if (i % 8 == 7) cout << '\n';
			}
		}
		cout << "请您选择是否还要继续？如要继续请输入y，如要退出，请输入n  <y/n>?";
		cin >> now;
	} while (now == 'y');
	delete[]a;
	return 0;
}
/*0 0 0 0 0 0 0 1
0 0 1 0 0 0 1 1
0 1 0 0 0 1 0 1
0 1 1 0 0 1 1 1
1 0 0 0 1 0 0 1
1 0 1 0 1 0 1 1
1 1 0 0 1 1 0 1
1 1 1 0 1 1 1 1

0 1 0 1 0 1 1 0
1 1 0 0 1 1 0 0
0 0 0 0 1 0 0 1
1 1 1 0 0 1 1 1
1 1 0 0 1 1 1 1
1 1 0 1 1 1 0 0
0 1 0 0 1 1 0 0
1 1 1 0 1 1 1 1*/